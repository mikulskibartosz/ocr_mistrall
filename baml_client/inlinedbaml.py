###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> Mistral {\n  provider \"openai-generic\"\n  options {\n    base_url \"https://api.mistral.ai/v1\"\n    model \"open-mistral-7b\"\n    api_key env.MISTRAL_API_KEY\n  }\n}\n\n",
    "contract.baml": "class Contact {\n  name string\n  title string?\n  email string?\n}\n\nclass Party {\n  name string @description(\"Mianownik, liczba pojedyncza, bez zwrotów grzecznościowych\")\n  role string\n  contact Contact?\n}\n\nclass RelatedAgreement {\n  type string\n  date string?\n}\n\nclass WorkStream {\n  major_tasks string[]\n  deliverables string[]\n}\n\nclass Role {\n  role string\n  responsibilities string[]\n}\n\nclass Services {\n  work_stream WorkStream\n  roles Role[]\n  total_resources string?\n}\n\nclass ProjectPlanAndMilestones {\n  start_date string?\n  end_date string?\n}\n\nclass CostStructure {\n  work_stream string?\n  duration string?\n  resources string?\n  rate string?\n}\n\nclass PaymentTerms {\n  due_date string?\n}\n\nclass PricingModel {\n  cost_structure CostStructure[]\n  payment_terms PaymentTerms\n}\n\nclass AcceptanceCriteria {\n  deliverables string[]\n}\n\nclass DurationAndTermination {\n  start_date string?\n  end_condition string?\n}\n\nclass ScopeOfWork {\n  services Services\n  project_plan_and_milestones ProjectPlanAndMilestones\n  place_of_performance string?\n  pricing_model PricingModel\n  acceptance_criteria AcceptanceCriteria\n  duration_and_termination DurationAndTermination\n  miscellaneous_provisions string?\n}\n\nclass Contract {\n  subject string\n  date string?\n  parties Party[]\n  related_agreements RelatedAgreement[]\n  scope_of_work ScopeOfWork\n  net_value string | float\n  currency string?\n  contract_name string?\n}\n\nfunction ExtractContract(contract: string) -> Contract {\n  client Mistral\n  prompt #\"You are an expert extraction algorithm designed to output ONLY raw JSON.\n\nYour task is to extract relevant information from the contract text provided below and create a structured JSON object following this schema:\n\nField Extraction Guidelines:\n\n1. For all fields, if you cannot find the information in the text, use \"missing\" as the value.\n2. For date fields, use YYYY-MM-DD format.\n3. For the \"net_value\" field:\n   - Extract the total net value of the agreement/order as a raw number\n   - Use a period (.) as the decimal separator (e.g., 10000.50 or 97800)\n   - If no explicit total value is found, return \"missing\"\n   - Example of a correct output: 12345.67 or \"missing\"\n4. For the \"currency\" field, extract the currency associated with monetary values.\n5. For \"contract_name\", extract the title or name of the contract document.\n6. For all array fields, provide empty arrays [] if no items are found.\n7. For all object fields with no data, provide empty objects {}.\n\nOutput Instructions:\n1. Your entire output MUST be ONLY the raw JSON object.\n2. Do not include ```json or ``` markers around the JSON.\n3. Do not include any explanations, notes, or text before or after the JSON object.\n4. Start the output directly with an opening curly brace and end it directly with a closing curly brace.\n5. Ensure the JSON is valid and properly formatted.\n\n### EXAMPLE INPUT:\nUMOWA ZLECENIE\n\nzawarta w dniu 2025-04-22 w Krakowie, pomiędzy:\n\nZielony Ogród Sp. z o.o. z siedzibą w Krakowie, adres: Kwiatowa 15, posiadającą NIP: 9453267891, REGON: 123456789, reprezentowaną przez: Annę Nowak - Prezes Zarządu, zwaną dalej „Zleceniodawcą\",\na\nPanem Tomaszem Markowskim zamieszkałym przy ul. Słonecznej 7, 32-400 Myślenice, posiadającym nr PESEL: 89071512345, zwanego dalej „Zleceniobiorcą\"\n\n1. Zleceniodawca zleca, a Zleceniobiorca zobowiązuje się wykonać w sposób samodzielny następujące czynności: projektowanie układu roślin w ogrodzie pokazowym.\n2. Umowa zawarta jest od dnia do dnia: 2025-04-25-2025-05-10\n3. Zleceniobiorcy za wykonanie czynności określonych w pkt 1 przysługuje wynagrodzenie brutto w wysokości 12000 zł, płatne przelewem na rachunek bankowy wskazany przez Zleceniobiorcę.\n4. Zleceniobiorca nie może bez pisemnej zgody Zleceniodawcy powierzyć wykonania niniejszej umowy w części lub w całości innej osobie ani też przelewać na nią swoich praw wynikających z umowy.\n5. W przypadku, gdy należne wynagrodzenie z tytułu niniejszej umowy wymienione w pkt 3 podlega opodatkowaniu podatkiem dochodowym od osób fizycznych, podatek ten obciąża Zleceniobiorcę\ni zaliczka na podatek jest przekazywana za pośrednictwem Spółki do właściwego urzędu skarbowego z wyłączeniem przypadków określonych w art. 44 ustawy o podatku dochodowym od osób fizycznych (najem, dzierżawa, działalność gospodarcza), w którym Zleceniobiorca zobowiązany jest samodzielnie dokonać wpłaty zaliczek na podatek dochodowy na rzecz właściwego urzędu skarbowego.\n6. Zleceniobiorca zobowiązuje się, z zastrzeżeniem ust.7, do traktowania jako poufnych wszelkich informacji, które zostaną mu udostępnione lub przekazane przez Zleceniodawcę w związku z wykonaniem niniejszej umowy, nie udostępniania ich w jakikolwiek sposób osobom trzecim bez pisemnej zgody Zleceniodawcy i wykorzystania ich tylko do celów określonych w umowie.\n7. Obowiązek zachowania poufności, o którym mowa w powyższym punkcie nie dotyczy informacji które:\n1) w czasie ich ujawnienia były publicznie znane,\n2) których obowiązek ujawnienia wynika z orzeczenia sądu lub decyzji innego uprawnionego organu władz, z zastrzeżeniem niezwłocznego powiadomienia Zleceniodawcy o takim obowiązku.\n8. Wszelkie zmiany niniejszej umowy wymagają formy pisemnej.\n\n### EXAMPLE OUTPUT:\n{\n  \"subject\": \"UMOWA ZLECENIE\",\n  \"date\": \"2025-04-22\",\n  \"parties\": [\n    {\n      \"name\": \"Zielony Ogród Sp. z o.o., Kwiatowa 15, Krakow, NIP: 9453267891, REGON: 123456789, Prezes Zarządu: Anna Nowak\",\n      \"role\": \"Zleceniodawca\"\n    },\n    {\n      \"name\": \"Tomasz Markowski, ul. Słoneczna 7, 32-400 Myślenice, nr PESEL: 89071512345\",\n      \"role\": \"Zleceniobiorca\"\n    }\n  ],\n  \"related_agreements\": [],\n  \"scope_of_work\": {\n    \"services\": {\n      \"work_stream\": {\n        \"major_tasks\": [\"projektowanie układu roślin w ogrodzie pokazowym\"],\n        \"deliverables\": []\n      },\n      \"roles\": []\n    },\n    \"project_plan_and_milestones\": {\n      \"start_date\": \"2025-04-25\",\n      \"end_date\": \"2025-05-10\"\n    },\n    \"place_of_performance\": \"missing\",\n    \"pricing_model\": {\n      \"cost_structure\": [],\n      \"payment_terms\": {\n        \"due_date\": \"missing\"\n      }\n    },\n    \"acceptance_criteria\": {\n      \"deliverables\": [\"projekt układu roślin w ogrodzie pokazowym\"]\n    },\n    \"duration_and_termination\": {\n      \"start_date\": \"2025-04-25\",\n      \"end_condition\": \"missing\"\n    },\n    \"miscellaneous_provisions\": \"missing\"\n  },\n  \"net_value\": \"12000\",\n  \"currency\": \"PLN\",\n  \"contract_name\": \"UMOWA ZLECENIE\"\n}\n\nIn Polish, the change from \"Markowskim\" to \"Markowski\" involves understanding the case system, specifically changing from the instrumental case to the nominative case for surnames. Here are the rules:\n-skim → -ski (Kowalskim → Kowalski)\n-ckim → -cki (Nowiackim → Nowiacki)\n-dzkim → -dzki (Zawadzkim → Zawadzki)\n-ką → -ka (Nowaczką → Nowaczka)\n-em → ∅ (Kowalczykiem → Kowalczyk)\n-czem → -cz (Kowaczem → Kowacz)\n-wiczem → -wicz (Adamkiewiczem → Adamkiewicz)\n-ową → -owa (Nowakową → Nowakowa)\n-ówną → -ówna (Kowalczówną → Kowalczówna)\n-lem → -l (Wróbelem → Wróbel)\n-piem → -p (Karpiem → Karp)\n\nContract Text to Analyze:\n    {{ contract }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\ntest sample_contract {\n  functions [ExtractContract]\n  args {\n    contract #\"UMOWA ZLECENIE\n\nzawarta w dniu 2025-04-20 w Warszawie, pomiędzy:\n\nKomar SP. Z O.O. z siedzibą w Zgierzu., adres: Dworcowa 4, posiadającą NIP: 78500112233, REGON: 987654321, reprezentowaną przez: Mieczysława Okonia. - Prezesa Zarządu, zwaną dalej „Zleceniodawcą\",\na\nPanem Tomaszem Karpiem zamieszkałym przy ul. Leśnej 3, 01-234 Robakowo, posiadającym nr PESEL: 98123100123., zwaną dalej „Zleceniobiorcą\"\n\n1. Zleceniodawca zleca, a Zleceniobiorca zobowiązuje się wykonać w sposób samodzielny następujące czynności: malowanie szopy na narzędzia.\n2. Umowa zawarta jest od dnia do dnia: 2025-04-20-2025-04-22\n3. Zleceniobiorcy za wykonanie czynności określonych w pkt 1 przysługuje wynagrodzenie brutto w wysokości 700 zł, płatne przelewem na rachunek bankowy wskazany przez Zleceniobiorcę.\n4. Zleceniobiorca nie może bez pisemnej zgody Zleceniodawcy powierzyć wykonania niniejszej umowy w części lub w całości innej osobie ani też przelewać na nią swoich praw wynikających z umowy.\n5. W przypadku, gdy należne wynagrodzenie z tytułu niniejszej umowy wymienione w pkt 3 podlega opodatkowaniu podatkiem dochodowym od osób fizycznych, podatek ten obciąża Zleceniobiorcę\ni zaliczka na podatek jest przekazywana za pośrednictwem Spółki do właściwego urzędu skarbowego z wyłączeniem przypadków określonych w art. 44 ustawy o podatku dochodowym od osób fizycznych (najem, dzierżawa, działalność gospodarcza), w którym Zleceniobiorca zobowiązany jest samodzielnie dokonać wpłaty zaliczek na podatek dochodowy na rzecz właściwego urzędu skarbowego.\n6. Zleceniobiorca zobowiązuje się, z zastrzeżeniem ust.7, do traktowania jako poufnych wszelkich informacji, które zostaną mu udostępnione lub przekazane przez Zleceniodawcę w związku z wykonaniem niniejszej umowy, nie udostępniania ich w jakikolwiek sposób osobom trzecim bez pisemnej zgody Zleceniodawcy i wykorzystania ich tylko do celów określonych w umowie.\n7. Obowiązek zachowania poufności, o którym mowa w powyższym punkcie nie dotyczy informacji które:\n1) w czasie ich ujawnienia były publicznie znane,\n2) których obowiązek ujawnienia wynika z orzeczenia sądu lub decyzji innego uprawnionego organu władz, z zastrzeżeniem niezwłocznego powiadomienia Zleceniodawcy o takim obowiązku.\n8. Wszelkie zmiany niniejszej umowy wymagają formy pisemnej.\n    \"#\n  }\n  @@assert(contract_name, {{ this.contract_name == \"UMOWA ZLECENIE\" }})\n  @@assert(net_value, {{ this.net_value == \"700\" }})\n  @@assert(currency, {{ this.currency == \"PLN\" }})\n  @@assert(date, {{ this.date == \"2025-04-20\" }})\n  @@assert(parties, {{ this.parties | length == 2 }})\n  @@assert(parties.zleceniodawca.name, {{ this.parties[0].name == \"Komar SP. Z O.O., Dworcowa 4, Zgierz, NIP: 78500112233, REGON: 987654321, Prezes Zarządu: Mieczysław Okonia\" }})\n  @@assert(parties.zleceniodawca.role, {{ this.parties[0].role == \"Zleceniodawca\" }})\n  @@assert(parties.zleceniobiorca.name, {{ this.parties[1].name == \"Tomasz Karp, ul. Leśna 3, 01-234 Robakowo, nr PESEL: 98123100123\" }})\n  @@assert(parties.zleceniobiorca.role, {{ this.parties[1].role == \"Zleceniobiorca\" }})\n  @@assert(scope_of_work.services.work_stream.major_tasks, {{ this.scope_of_work.services.work_stream.major_tasks == [\"malowanie szopy na narzędzia\"] }})\n  @@assert(scope_of_work.services.work_stream.major_tasks, {{ this.scope_of_work.services.work_stream.roles == []}})\n  @@assert(scope_of_work.project_plan_and_milestones.start_date, {{ this.scope_of_work.project_plan_and_milestones.start_date == \"2025-04-20\" }})\n  @@assert(scope_of_work.project_plan_and_milestones.end_date, {{ this.scope_of_work.project_plan_and_milestones.end_date == \"2025-04-22\" }})\n  @@assert(scope_of_work.acceptance_criteria.deliverables, {{ this.scope_of_work.acceptance_criteria.deliverables == [\"malowanie szopy na narzędzia\"] }})\n  @@assert(scope_of_work.duration_and_termination.start_date, {{ this.scope_of_work.duration_and_termination.start_date == \"2025-04-20\" }})\n  @@assert(scope_of_work.duration_and_termination.end_condition, {{ this.scope_of_work.duration_and_termination.end_condition == \"missing\" }})\n}\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.85.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
}

def get_baml_files():
    return file_map